From 0db082ba66ef5e581fff6f3217941a0a6e80644a Mon Sep 17 00:00:00 2001
From: Harshesh Valera <harshesh.v@variscite.com>
Date: Wed, 28 Sep 2022 14:57:45 -0700
Subject: [PATCH] Use wifi rfkill to turn on WiFi

Signed-off-by: Harshesh Valera <harshesh.v@variscite.com>
Change-Id: I1ed75c78ed337018e6e7c83dd6017bf4e54d1410
---
 bcmdhd/wifi_hal/wifi_hal.cpp | 99 ++++++++++++++++++++++++++++++++++++
 1 file changed, 99 insertions(+)

diff --git a/bcmdhd/wifi_hal/wifi_hal.cpp b/bcmdhd/wifi_hal/wifi_hal.cpp
index d3ffe57..0224d8a 100755
--- a/bcmdhd/wifi_hal/wifi_hal.cpp
+++ b/bcmdhd/wifi_hal/wifi_hal.cpp
@@ -359,6 +359,101 @@ wifi_check_valid_ota_version(wifi_interface_handle handle)
 }
 #endif // GOOGLE_WIFI_FW_CONFIG_VERSION_C_WRAPPER
 
+/******************************************************************************
+**  Static variables
+******************************************************************************/
+
+static int rfkill_id = -1;
+static char *rfkill_state_path = NULL;
+static int init_rfkill()
+{
+    char path[64];
+    char buf[16];
+    int fd, sz, id;
+
+    for (id = 0; ; id++)
+    {
+        snprintf(path, sizeof(path), "/sys/class/rfkill/rfkill%d/type", id);
+        fd = open(path, O_RDONLY);
+        if (fd < 0)
+        {
+            ALOGE("init_rfkill : open(%s) failed: %s (%d)\n", \
+                 path, strerror(errno), errno);
+            return -1;
+        }
+
+        sz = read(fd, &buf, sizeof(buf));
+        close(fd);
+
+        if (sz >= 9 && memcmp(buf, "wlan", 4) == 0)
+        {
+            rfkill_id = id;
+            break;
+        }
+    }
+
+    asprintf(&rfkill_state_path, "/sys/class/rfkill/rfkill%d/state", rfkill_id);
+    return 0;
+}
+
+/*******************************************************************************
+**
+** Function        upio_set_bluetooth_power
+**
+** Description     Interact with low layer driver to set Bluetooth power
+**                 on/off.
+**
+** Returns         0  : SUCCESS or Not-Applicable
+**                 <0 : ERROR
+**
+*******************************************************************************/
+int upio_set_wifi_power(int on)
+{
+    int sz;
+    int fd = -1;
+    int ret = -1;
+    char buffer = '0';
+
+    switch(on)
+    {
+        case 0:
+            buffer = '0';
+            break;
+
+        case 1:
+            buffer = '1';
+            break;
+    }
+
+    if (rfkill_id == -1)
+    {
+        if (init_rfkill())
+            return ret;
+    }
+
+    fd = open(rfkill_state_path, O_WRONLY);
+
+    if (fd < 0)
+    {
+        ALOGE("set_wifi_power : open(%s) for write failed: %s (%d)",
+            rfkill_state_path, strerror(errno), errno);
+        return ret;
+    }
+
+    sz = write(fd, &buffer, 1);
+
+    if (sz < 0) {
+        ALOGE("set_bluetooth_power : write(%s) failed: %s (%d)",
+            rfkill_state_path, strerror(errno),errno);
+    }
+    else
+        ret = 0;
+
+    if (fd >= 0)
+        close(fd);
+    return ret;
+}
+
 hal_info *halInfo = NULL;
 wifi_error wifi_pre_initialize(void)
 {
@@ -370,6 +465,8 @@ wifi_error wifi_pre_initialize(void)
     wifi_error result = WIFI_SUCCESS;
     wifi_handle handle;
 
+    upio_set_wifi_power(1);
+
     ALOGE("wifi_pre_initialize");
     ALOGE("--- HAL version: %s ---\n", HAL_VERSION);
     halInfo = (hal_info *)malloc(sizeof(hal_info));
@@ -702,6 +799,8 @@ void wifi_cleanup(wifi_handle handle, wifi_cleaned_up_handler handler)
         ALOGE("could not write to the cleanup socket");
     }
     ALOGE("wifi_clean_up done");
+
+    upio_set_wifi_power(0);
 }
 
 static int internal_pollin_handler(wifi_handle handle)
-- 
2.25.1

